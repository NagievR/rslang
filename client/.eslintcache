[{"E:\\study\\rslang\\client\\src\\index.js":"1","E:\\study\\rslang\\client\\src\\App.js":"2","E:\\study\\rslang\\client\\src\\components\\aboutApp\\aboutApp.js":"3","E:\\study\\rslang\\client\\src\\components\\footer\\footer.js":"4","E:\\study\\rslang\\client\\src\\components\\games\\gamesMain.js":"5","E:\\study\\rslang\\client\\src\\components\\context\\context.js":"6","E:\\study\\rslang\\client\\src\\components\\eBook\\EBook.js":"7","E:\\study\\rslang\\client\\src\\components\\reducer\\reducer.js":"8","E:\\study\\rslang\\client\\src\\components\\dictionary\\Dictionary.js":"9","E:\\study\\rslang\\client\\src\\components\\games\\routes\\start\\start.js":"10","E:\\study\\rslang\\client\\src\\components\\games\\routes\\savanna-g1\\index.js":"11","E:\\study\\rslang\\client\\src\\components\\AboutTeam\\aboutTeam.js":"12","E:\\study\\rslang\\client\\src\\components\\header\\header.js":"13","E:\\study\\rslang\\client\\src\\components\\loginRegister\\loginRegistration.js":"14","E:\\study\\rslang\\client\\src\\components\\main\\main.js":"15","E:\\study\\rslang\\client\\src\\components\\notFound\\notFound.js":"16","E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\audioChallenge.js":"17","E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\movingLayer.js":"18","E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\wordCells\\wordCell.js":"19","E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\soundLayer\\soundLayer.js":"20","E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\buttonLayer\\buttonLayer.js":"21"},{"size":302,"mtime":1617529283512,"results":"22","hashOfConfig":"23"},{"size":1836,"mtime":1618170916425,"results":"24","hashOfConfig":"23"},{"size":2693,"mtime":1617529283382,"results":"25","hashOfConfig":"23"},{"size":1935,"mtime":1617529283390,"results":"26","hashOfConfig":"23"},{"size":800,"mtime":1618247687686,"results":"27","hashOfConfig":"23"},{"size":109,"mtime":1617529283382,"results":"28","hashOfConfig":"23"},{"size":14563,"mtime":1618247687676,"results":"29","hashOfConfig":"23"},{"size":19554,"mtime":1617529283432,"results":"30","hashOfConfig":"23"},{"size":15104,"mtime":1617529283382,"results":"31","hashOfConfig":"23"},{"size":3682,"mtime":1618247687764,"results":"32","hashOfConfig":"23"},{"size":5180,"mtime":1618247687753,"results":"33","hashOfConfig":"23"},{"size":3483,"mtime":1617529283382,"results":"34","hashOfConfig":"23"},{"size":1804,"mtime":1618247687766,"results":"35","hashOfConfig":"23"},{"size":1352,"mtime":1617047570233,"results":"36","hashOfConfig":"23"},{"size":1556,"mtime":1617047570234,"results":"37","hashOfConfig":"23"},{"size":532,"mtime":1617047570236,"results":"38","hashOfConfig":"23"},{"size":2651,"mtime":1618260963161,"results":"39","hashOfConfig":"23"},{"size":638,"mtime":1618256643366,"results":"40","hashOfConfig":"23"},{"size":386,"mtime":1618256954906,"results":"41","hashOfConfig":"23"},{"size":338,"mtime":1618247687744,"results":"42","hashOfConfig":"23"},{"size":274,"mtime":1618253511325,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"w4zl1o",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"E:\\study\\rslang\\client\\src\\index.js",[],["89","90"],"E:\\study\\rslang\\client\\src\\App.js",["91"],"E:\\study\\rslang\\client\\src\\components\\aboutApp\\aboutApp.js",[],"E:\\study\\rslang\\client\\src\\components\\footer\\footer.js",[],"E:\\study\\rslang\\client\\src\\components\\games\\gamesMain.js",[],"E:\\study\\rslang\\client\\src\\components\\context\\context.js",[],"E:\\study\\rslang\\client\\src\\components\\eBook\\EBook.js",["92","93"],"E:\\study\\rslang\\client\\src\\components\\reducer\\reducer.js",[],"E:\\study\\rslang\\client\\src\\components\\dictionary\\Dictionary.js",["94","95","96","97","98","99","100","101","102"],"import React from \"react\";\r\nimport styles from \"./dictionary.module.css\";\r\nimport RSLangContext from \"../context/context\";\r\nimport soundImage from \"../../assets/sound.png\";\r\nimport saveImage from \"../../assets/floppy-disk.png\";\r\nimport deleteImage from \"../../assets/trash.png\";\r\nimport leftArrowImage from \"../../assets/left-arrow.png\";\r\nimport rightArrowImage from \"../../assets/right-arrow.png\";\r\nimport settingsImage from \"../../assets/settings.png\";\r\nimport undoImage from \"../../assets/undo.png\";\r\nfunction Dictionary() {\r\n  const {\r\n    currentSection,\r\n    dispatch,\r\n    savedWords,\r\n    deletedWords,\r\n    learningWords,\r\n    showAddToHardOrDeletedWordsButtons,\r\n    showWordTranslationAndTranslatedExampleSentence,\r\n  } = React.useContext(RSLangContext);\r\n  return (\r\n    <div className={styles.dictionary}>\r\n      <div className={styles.wordList}>\r\n        <div className={styles.navigation}>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <button\r\n                  onClick={(event) => {\r\n                    dispatch({\r\n                      type: \"CHANGE_SECTION\",\r\n                      payload: event.target.id,\r\n                    });\r\n                  }}\r\n                  className={\r\n                    currentSection === \"learning_words\"\r\n                      ? styles.activeButton\r\n                      : \"\"\r\n                  }\r\n                  id=\"learning_words\"\r\n                >\r\n                  Изучаемые Слова\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  onClick={(event) => {\r\n                    dispatch({\r\n                      type: \"CHANGE_SECTION\",\r\n                      payload: event.target.id,\r\n                    });\r\n                  }}\r\n                  className={\r\n                    currentSection === \"difficult_words\"\r\n                      ? styles.activeButton\r\n                      : \"\"\r\n                  }\r\n                  id=\"difficult_words\"\r\n                >\r\n                  Сложные Слова\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  onClick={(event) => {\r\n                    dispatch({\r\n                      type: \"CHANGE_SECTION\",\r\n                      payload: event.target.id,\r\n                    });\r\n                  }}\r\n                  className={\r\n                    currentSection == \"deleted_words\" ? styles.activeButton : \"\"\r\n                  }\r\n                  id=\"deleted_words\"\r\n                >\r\n                  Удаленные Слова\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        {currentSection === \"learning_words\"\r\n          ? learningWords.map((word) => {\r\n              const audio = new Audio(`${word.audio}`);\r\n              const audioExample = new Audio(`${word.audioExample}`);\r\n              const audioMeaning = new Audio(`${word.audioMeaning}`);\r\n              return (\r\n                <div\r\n                  className={`${styles.word} ${\r\n                    word.isSavedWord ? `${styles.hardWord}` : \"\"\r\n                  }`}\r\n                  key={word.id}\r\n                >\r\n                  <div className={styles.image}>\r\n                    <img src={word.image} alt=\"image\" />\r\n                  </div>\r\n                  <div className={styles.wordInfo}>\r\n                    <div className={styles.wordInfoFirstRow}>\r\n                      <p className={styles.wordTitle}>{word.word}</p>\r\n                      <p className={styles.wordTranscription}>\r\n                        {word.transcription}\r\n                      </p>\r\n                      <p>\r\n                        <button\r\n                          style={{\r\n                            width: \"30px\",\r\n                            height: \"20px\",\r\n                            backgroundColor: \"inherit\",\r\n                          }}\r\n                          onClick={() => {\r\n                            audio.play();\r\n                            setTimeout(() => {\r\n                              audioMeaning.play();\r\n                            }, audio.duration * 1000 + 500);\r\n                            setTimeout(() => {\r\n                              audioExample.play();\r\n                            }, audio.duration * 1000 + 1000 + audioMeaning.duration * 1000);\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={soundImage}\r\n                            alt=\"\"\r\n                            style={{ width: \"100%\", height: \"100%\" }}\r\n                          />\r\n                        </button>\r\n                        {!word.isDeletedWord ? (\r\n                          <button\r\n                            style={{\r\n                              width: \"30px\",\r\n                              height: \"20px\",\r\n                              backgroundColor: \"inherit\",\r\n                            }}\r\n                            onClick={() => {\r\n                              dispatch({\r\n                                type: \"TOGGLE_SAVED_WORD\",\r\n                                payload: word.id,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <img\r\n                              src={saveImage}\r\n                              alt=\"\"\r\n                              style={{ width: \"100%\", height: \"100%\" }}\r\n                            />\r\n                          </button>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        <button\r\n                          style={{\r\n                            backgroundColor: \"inherit\",\r\n                          }}\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: `${\r\n                                word.isDeletedWord\r\n                                  ? \"RETURN_WORD\"\r\n                                  : \"REMOVE_FROM_LEARNING_WORDS\"\r\n                              }`,\r\n                              payload: word.id,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <img src={undoImage} alt=\"\" />\r\n                        </button>\r\n                      </p>\r\n                    </div>\r\n                    <p style={{ fontWeight: \"bold\" }}>\r\n                      {showWordTranslationAndTranslatedExampleSentence\r\n                        ? word.wordTranslate\r\n                        : \"\"}\r\n                    </p>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: word.textMeaning }}\r\n                    ></p>\r\n                    {showWordTranslationAndTranslatedExampleSentence ? (\r\n                      <p>{word.textMeaningTranslate}</p>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: word.textExample }}\r\n                      style={{ fontStyle: \"italic\" }}\r\n                    ></p>\r\n                    <p>\r\n                      {showWordTranslationAndTranslatedExampleSentence\r\n                        ? word.textExampleTranslate\r\n                        : \"\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : currentSection === \"difficult_words\"\r\n          ? savedWords.map((word) => {\r\n              const audio = new Audio(`${word.audio}`);\r\n              const audioExample = new Audio(`${word.audioExample}`);\r\n              const audioMeaning = new Audio(`${word.audioMeaning}`);\r\n              return (\r\n                <div\r\n                  className={`${styles.word} ${\r\n                    word.isSavedWord ? `${styles.hardWord}` : \"\"\r\n                  }`}\r\n                  key={word.id}\r\n                >\r\n                  <div className={styles.image}>\r\n                    <img src={word.image} alt=\"image\" />\r\n                  </div>\r\n                  <div className={styles.wordInfo}>\r\n                    <div className={styles.wordInfoFirstRow}>\r\n                      <p className={styles.wordTitle}>{word.word}</p>\r\n                      <p className={styles.wordTranscription}>\r\n                        {word.transcription}\r\n                      </p>\r\n                      <p>\r\n                        <button\r\n                          style={{\r\n                            width: \"30px\",\r\n                            height: \"20px\",\r\n                            backgroundColor: \"inherit\",\r\n                          }}\r\n                          onClick={() => {\r\n                            audio.play();\r\n                            setTimeout(() => {\r\n                              audioMeaning.play();\r\n                            }, audio.duration * 1000 + 500);\r\n                            setTimeout(() => {\r\n                              audioExample.play();\r\n                            }, audio.duration * 1000 + 1000 + audioMeaning.duration * 1000);\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={soundImage}\r\n                            alt=\"\"\r\n                            style={{ width: \"100%\", height: \"100%\" }}\r\n                          />\r\n                        </button>\r\n                        <button\r\n                          style={{\r\n                            width: \"30px\",\r\n                            height: \"20px\",\r\n                            backgroundColor: \"inherit\",\r\n                          }}\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"TOGGLE_SAVED_WORD\",\r\n                              payload: word.id,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={saveImage}\r\n                            alt=\"\"\r\n                            style={{ width: \"100%\", height: \"100%\" }}\r\n                          />\r\n                        </button>\r\n                      </p>\r\n                    </div>\r\n                    <p style={{ fontWeight: \"bold\" }}>\r\n                      {showWordTranslationAndTranslatedExampleSentence\r\n                        ? word.wordTranslate\r\n                        : \"\"}\r\n                    </p>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: word.textMeaning }}\r\n                    ></p>\r\n                    {showWordTranslationAndTranslatedExampleSentence ? (\r\n                      <p>{word.textMeaningTranslate}</p>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: word.textExample }}\r\n                      style={{ fontStyle: \"italic\" }}\r\n                    ></p>\r\n                    <p>\r\n                      {showWordTranslationAndTranslatedExampleSentence\r\n                        ? word.textExampleTranslate\r\n                        : \"\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : currentSection === \"deleted_words\"\r\n          ? deletedWords.map((word) => {\r\n              const audio = new Audio(`${word.audio}`);\r\n              const audioExample = new Audio(`${word.audioExample}`);\r\n              const audioMeaning = new Audio(`${word.audioMeaning}`);\r\n              return (\r\n                <div\r\n                  className={`${styles.word} ${\r\n                    word.isSavedWord ? `${styles.hardWord}` : \"\"\r\n                  }`}\r\n                  key={word.id}\r\n                >\r\n                  <div className={styles.image}>\r\n                    <img src={word.image} alt=\"image\" />\r\n                  </div>\r\n                  <div className={styles.wordInfo}>\r\n                    <div className={styles.wordInfoFirstRow}>\r\n                      <p className={styles.wordTitle}>{word.word}</p>\r\n                      <p className={styles.wordTranscription}>\r\n                        {word.transcription}\r\n                      </p>\r\n                      <p>\r\n                        <button\r\n                          style={{\r\n                            width: \"30px\",\r\n                            height: \"20px\",\r\n                            backgroundColor: \"inherit\",\r\n                          }}\r\n                          onClick={() => {\r\n                            audio.play();\r\n                            setTimeout(() => {\r\n                              audioMeaning.play();\r\n                            }, audio.duration * 1000 + 500);\r\n                            setTimeout(() => {\r\n                              audioExample.play();\r\n                            }, audio.duration * 1000 + 1000 + audioMeaning.duration * 1000);\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={soundImage}\r\n                            alt=\"\"\r\n                            style={{ width: \"100%\", height: \"100%\" }}\r\n                          />\r\n                        </button>\r\n                        <button\r\n                          style={{\r\n                            backgroundColor: \"inherit\",\r\n                          }}\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"RETURN_WORD\",\r\n                              payload: word.id,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <img src={undoImage} alt=\"\" />\r\n                        </button>\r\n                      </p>\r\n                    </div>\r\n                    <p style={{ fontWeight: \"bold\" }}>\r\n                      {showWordTranslationAndTranslatedExampleSentence\r\n                        ? word.wordTranslate\r\n                        : \"\"}\r\n                    </p>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: word.textMeaning }}\r\n                    ></p>\r\n                    {showWordTranslationAndTranslatedExampleSentence ? (\r\n                      <p>{word.textMeaningTranslate}</p>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: word.textExample }}\r\n                      style={{ fontStyle: \"italic\" }}\r\n                    ></p>\r\n                    <p>\r\n                      {showWordTranslationAndTranslatedExampleSentence\r\n                        ? word.textExampleTranslate\r\n                        : \"\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dictionary;\r\n","E:\\study\\rslang\\client\\src\\components\\games\\routes\\start\\start.js",["103"],"E:\\study\\rslang\\client\\src\\components\\games\\routes\\savanna-g1\\index.js",["104","105","106","107","108","109"],"E:\\study\\rslang\\client\\src\\components\\AboutTeam\\aboutTeam.js",[],"E:\\study\\rslang\\client\\src\\components\\header\\header.js",["110"],"E:\\study\\rslang\\client\\src\\components\\loginRegister\\loginRegistration.js",[],"E:\\study\\rslang\\client\\src\\components\\main\\main.js",[],"E:\\study\\rslang\\client\\src\\components\\notFound\\notFound.js",[],"E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\audioChallenge.js",["111"],"E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\movingLayer.js",[],"E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\wordCells\\wordCell.js",[],"E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\soundLayer\\soundLayer.js",["112"],"import React from 'react';\r\nimport s from './soundLayer.module.css';\r\nimport soundLogo from '../../../../../../assets/sound.png';\r\n\r\nconst SoundLayer = () => (\r\n    <div className={s.soundLayer}>\r\n        <div className={s.roundOfSound}> <img src={soundLogo} className={s.soundImage} /> </div>\r\n    </div>\r\n)\r\n\r\nexport default SoundLayer;","E:\\study\\rslang\\client\\src\\components\\games\\routes\\audioChallenge-g3\\components\\buttonLayer\\buttonLayer.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":3,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":39,"column":6,"nodeType":"123","endLine":39,"endColumn":46,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":254,"column":19,"nodeType":"127","endLine":254,"endColumn":55},{"ruleId":"117","severity":1,"message":"128","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":19},{"ruleId":"117","severity":1,"message":"129","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":22},{"ruleId":"117","severity":1,"message":"130","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":23},{"ruleId":"117","severity":1,"message":"131","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":21},{"ruleId":"117","severity":1,"message":"132","line":18,"column":5,"nodeType":"119","messageId":"120","endLine":18,"endColumn":39},{"ruleId":"133","severity":1,"message":"134","line":72,"column":36,"nodeType":"135","messageId":"136","endLine":72,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":95,"column":21,"nodeType":"127","endLine":95,"endColumn":57},{"ruleId":"125","severity":1,"message":"126","line":207,"column":21,"nodeType":"127","endLine":207,"endColumn":57},{"ruleId":"125","severity":1,"message":"126","line":298,"column":21,"nodeType":"127","endLine":298,"endColumn":57},{"ruleId":"117","severity":1,"message":"137","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":18},{"ruleId":"117","severity":1,"message":"138","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"117","severity":1,"message":"139","line":12,"column":12,"nodeType":"119","messageId":"120","endLine":12,"endColumn":21},{"ruleId":"117","severity":1,"message":"140","line":12,"column":23,"nodeType":"119","messageId":"120","endLine":12,"endColumn":35},{"ruleId":"121","severity":1,"message":"141","line":118,"column":8,"nodeType":"123","endLine":118,"endColumn":10,"suggestions":"142"},{"ruleId":"121","severity":1,"message":"143","line":130,"column":8,"nodeType":"123","endLine":130,"endColumn":13,"suggestions":"144"},{"ruleId":"121","severity":1,"message":"145","line":137,"column":8,"nodeType":"123","endLine":137,"endColumn":19,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":41,"column":19,"nodeType":"127","endLine":47,"endColumn":20},{"ruleId":"117","severity":1,"message":"149","line":26,"column":9,"nodeType":"119","messageId":"120","endLine":26,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":7,"column":42,"nodeType":"127","endLine":7,"endColumn":90},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'getWords'. Either include them or remove the dependency array.","ArrayExpression",["154"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'deleteImage' is defined but never used.","'leftArrowImage' is defined but never used.","'rightArrowImage' is defined but never used.","'settingsImage' is defined but never used.","'showAddToHardOrDeletedWordsButtons' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'gameLevel' is assigned a value but never used.","'setGameLevel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'findWords'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has missing dependencies: 'findWords' and 'lifesLeft'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'gameOver'. Either include it or remove the dependency array.",["157"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'imageSrc' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [currentWordGroupPage, currentWordGroup, getWords, dispatch]",{"range":"166","text":"167"},"Update the dependencies array to be: [findWords]",{"range":"168","text":"169"},"Update the dependencies array to be: [findWords, lifesLeft, top]",{"range":"170","text":"171"},"Update the dependencies array to be: [gameOver, lifesLeft]",{"range":"172","text":"173"},[1360,1400],"[currentWordGroupPage, currentWordGroup, getWords, dispatch]",[3282,3284],"[findWords]",[3622,3627],"[findWords, lifesLeft, top]",[3765,3776],"[gameOver, lifesLeft]"]